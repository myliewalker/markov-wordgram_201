Mylie Walker mgw25

Run WordGramDiver for wordgrams of size 2-10 and record
the number of WordGram values/objects that occur more than
once as reported by the runs. For example, with WSIZE = 2,
which generates 2-grams, the output of benchmark and benchmarkShift
each indicates that the total # wordgrams generated is 177,634
and that the # unique wordgrams is 117,181

This means there are 177,634 - 117,181 = 60,453 WordGram values that
occur more than once. Find these same values for other orders
of k and complete the table below for different k-grams/different 
values of WSIZE

WSIZE    # duplicates
2        60,453
3        10,756
4        1,987
5        667
6        362
7        226
8        151
9        105
10       73

=====
Explain in your own words the conceptual differences between 
the benchmark and benchmarkShift methods. 

Answer these questions: 

(1) Why the results of these methods should be the same in 
terms of changes made to the HashSet parameter.
The benchmark and benchmarkShift methods both return an integer
that equals the number of words passed in in filename minus 2. 
Since changes in the HashSet do not alter the file that is passed
in, both methods are unaffected by changes in the HashSet parameter.
As long as the same file is passed into them, they will return the 
same result.

(2) What are the conceptual differences between the two
benchmarking methods
The benchmark method passes an array of all the strings in filename 
into WordGram. The starting index of the WordGram changes each
iteration: it starts at 0 and gets incremented until WordGram starts
at the length of the array - WSIZE. In contrast, the
benchmarkShift method passes an array of 3 strings in filename 
into WordGram. This array varies every time: it is originally the
first three strings in filename, then the second, third, and fourth
strings. This process continues until it passes in the last three
strings in filename.

(3) Is the total amount of memory allocated for arrays
the same or different in the two methods? Account for
arrays created in the methods and arrays created by
WordGram objects. Try to be quantitative in answering.
The benchmark method allocates more memory for arrays than the 
benchmarkShift method. The benchmark method creates an array that 
is the same size as the number of strings in filename. It then passes
arrays of different lengths into WordGram: the largest array contains
the number of strings in filename, while the smallest one contains three
elements. In contrast, the benchmarkShift method only passes arrays
with three elements into WordGram. Since the arrays that benchmark
passes into WordGram are larger than the ones that benchmarkShift passes
into WordGram the amount of memory that benchmark allocates for arrays
is greater than the amount of memory benchmarkShift allocates for arrays.